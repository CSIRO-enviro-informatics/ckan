version: "3.2"
services:
   # docker-compose build && docker-compose up
   # If you experience problems with the CKAN container not being
   # able to connect to the DB, then most likely the DB has not
   # started up quickly enough. Just do "docker-compose up ckan"
   # again to retry
  ckan:
     build: ../../
     links:
        - db
        - solr
        - redis
        - datapusher
        - staticcontent
     volumes:
        - type: volume
          source: ckan_config
          target: /etc/ckan/default
        - type: volume
          source: ckan_src
          target: /usr/lib/ckan/default/src
        - type: bind
          source: ${HOST_FILE_STORE}
          target: /var/lib/ckan
        - type: volume
          source: ckan_entrypoint
          target: /entrypoint
     environment:
        - DEBUG=${DEBUG:-false}
        - DB_PORT_5432_TCP_ADDR=db
        - DB_PORT_5432_TCP_PORT=5432
        - SOLR_PORT_8983_TCP_ADDR=solr
        - SOLR_PORT_8983_TCP_PORT=8983
        - CKAN_SOLR_URL=http://${SOLR_PORT_8983_TCP_ADDR}:${SOLR_PORT_8983_TCP_PORT}/solr/ckan
        - REDIS_PORT_6379_TCP_PORT=6379
        - REDIS_PORT_6379_TCP_ADDR=redis
        - CKAN_SITE_URL=${CKAN_SITE_BASE_URL}
        - CKAN_PORT=$CKAN_PORT
        - CKAN_ADMIN_PASSWORD=${CKAN_ADMIN_PASSWORD}
        - DATASTORE_READONLY_PASSWORD=$DATASTORE_READONLY_PASSWORD
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - CKAN_LDAP_PASSWORD=$CKAN_LDAP_PASSWORD
        - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore_default
        - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore_default
        - CKAN_DATAPUSHER_URL=http://datapusher:8800
        - DB_ENV_POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}
        - DB_ENV_POSTGRES_USER=ckan
        - DB_ENV_POSTGRES_DB=ckan
     restart: always 

  datapusher:
     build: ./datapusher
     ports:
        - "${DATAPUSHER_HOST_PORT}:8800"
     restart: always 

  db:
    build: postgresql/
    environment:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - PGOPTIONS=-c tcp_keepalives_idle=30 -c tcp_keepalives_interval=30 
    ports:
        - ${DB_HOST_PORT:-5432}:5432
    restart: always 
  
  staticcontent:
    build: static_content/
    ports:
            - ${STATIC_CONTENT_HOST_PORT:-8889}:80
    restart: always 

  # Do not add a restore policy to the restore container it should not be run automatically and is here to define the ability to manually run it
  restore:
    build: restore/
    links:
        - db
    environment:
        - POSTGRES_HOST=db
        - POSTGRES_DB=ckan
        - POSTGRES_DS_DB=datastore_default
        - POSTGRES_USER=ckan
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes:
        - ${HOST_BACKUP_DIR}/postgres/ckan:/backups/ckan
        - ${HOST_BACKUP_DIR}/postgres/datastore:/backups/datastore
    command: 'true'

  ckan_postgres_backup:
    build: postgres_backups/
    volumes:
        - ${HOST_BACKUP_DIR}/postgres/ckan:/backups
    links:
        - db
    environment:
        - POSTGRES_HOST=db
        - POSTGRES_DB=ckan
        - POSTGRES_USER=ckan
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - POSTGRES_EXTRA_OPTS=--format=custom
        - SCHEDULE=${BACKUP_FREQUENCY:-@daily}
        - BACKUP_KEEP_DAYS=7
        - BACKUP_KEEP_WEEKS=4
        - BACKUP_KEEP_MONTHS=6
    restart: always 

  datastore_postgres_backup:
    build: postgres_backups/
    volumes:
        - ${HOST_BACKUP_DIR}/postgres/datastore:/backups
    links:
        - db
    environment:
        - POSTGRES_HOST=db
        - POSTGRES_DB=datastore_default
        - POSTGRES_USER=ckan
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - POSTGRES_EXTRA_OPTS=--format=custom
        - SCHEDULE=${BACKUP_FREQUENCY:-@daily}
        - BACKUP_KEEP_DAYS=7
        - BACKUP_KEEP_WEEKS=4
        - BACKUP_KEEP_MONTHS=6
    restart: always

  solr:
    build: solr/
    restart: always

  redis:
    image: redis:latest
    restart: always

volumes:
  ckan_config:
  ckan_src:
  ckan_entrypoint:

